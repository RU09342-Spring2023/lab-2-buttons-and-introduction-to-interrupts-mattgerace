There is a sample file in this folder you will need to import into your Code Composer and work on. You will need to submit that file, documented well, and
a README.md file (you can replace this one) with the documentation that tells someone about what the code is, what it does, how it works etc.
For an audience for your README, imagine you at the beginning of the lab, looking for code which does, well, this.


The code is a occupancy detector code.  It works by assigning the LED outputs to outputs and assigning each button to an input configured with a pullup resistor.  
After the initialization of all the inputs and outputs and pins are assigned, the code begins with an infinite while loop.  This while loop will run until infinity
or until the code is terminated.  I designed two different versions of the code.  The while loop version is the top down version which essentially runs using dowhile loops
to keep looping the code.  The other version of the code uses a switch statement in order to achieve the desire outcome in a state machine fashion.
Both versions of the codes are efficient.  These codes both utilize an integer called "count" which is used for tracking the delay necessary in each state.
The count variables counts up with the LED blinks and runs __delay_cycles(); in a loop in order to achieve the delay used for the warning and armed states.
